--- ZFSPlugin.pm.8.orig	2025-08-15 21:10:45.401623108 -0600
+++ ZFSPlugin.pm.8	2025-08-15 21:17:39.796492888 -0600
@@ -11,6 +11,7 @@
 
 use base qw(PVE::Storage::ZFSPoolPlugin);
 use PVE::Storage::LunCmd::Comstar;
+use PVE::Storage::LunCmd::TrueNAS;
 use PVE::Storage::LunCmd::Istgt;
 use PVE::Storage::LunCmd::Iet;
 use PVE::Storage::LunCmd::LIO;
@@ -20,32 +21,35 @@
 my $id_rsa_path = '/etc/pve/priv/zfs';
 
 my $lun_cmds = {
-    create_lu => 1,
-    delete_lu => 1,
-    import_lu => 1,
-    modify_lu => 1,
-    add_view => 1,
-    list_view => 1,
-    list_lu => 1,
+    create_lu   => 1,
+    delete_lu   => 1,
+    import_lu   => 1,
+    modify_lu   => 1,
+    add_view    => 1,
+    list_view   => 1,
+    list_extent => 1,
+    list_lu     => 1,
 };
 
 my $zfs_unknown_scsi_provider = sub {
     my ($provider) = @_;
 
-    die "$provider: unknown iscsi provider. Available [comstar, istgt, iet, LIO]";
+    die "$provider: unknown iscsi provider. Available [comstar, truenas, istgt, iet, LIO]";
 };
 
 my $zfs_get_base = sub {
     my ($scfg) = @_;
 
     if ($scfg->{iscsiprovider} eq 'comstar') {
-        return PVE::Storage::LunCmd::Comstar::get_base($scfg);
+        return PVE::Storage::LunCmd::Comstar::get_base;
+    } elsif ($scfg->{iscsiprovider} eq 'truenas') {
+        return PVE::Storage::LunCmd::TrueNAS::get_base;
     } elsif ($scfg->{iscsiprovider} eq 'istgt') {
-        return PVE::Storage::LunCmd::Istgt::get_base($scfg);
+        return PVE::Storage::LunCmd::Istgt::get_base;
     } elsif ($scfg->{iscsiprovider} eq 'iet') {
-        return PVE::Storage::LunCmd::Iet::get_base($scfg);
+        return PVE::Storage::LunCmd::Iet::get_base;
     } elsif ($scfg->{iscsiprovider} eq 'LIO') {
-        return PVE::Storage::LunCmd::LIO::get_base($scfg);
+        return PVE::Storage::LunCmd::LIO::get_base;
     } else {
         $zfs_unknown_scsi_provider->($scfg->{iscsiprovider});
     }
@@ -61,8 +65,10 @@
 
     if ($lun_cmds->{$method}) {
         if ($scfg->{iscsiprovider} eq 'comstar') {
+            $msg = PVE::Storage::LunCmd::Comstar::run_lun_command($scfg, $timeout, $method, @params);
+        } elsif ($scfg->{iscsiprovider} eq 'truenas') {
             $msg =
-                PVE::Storage::LunCmd::Comstar::run_lun_command($scfg, $timeout, $method, @params);
+                PVE::Storage::LunCmd::TrueNAS::run_lun_command($scfg, $timeout, $method, @params);
         } elsif ($scfg->{iscsiprovider} eq 'istgt') {
             $msg = PVE::Storage::LunCmd::Istgt::run_lun_command($scfg, $timeout, $method, @params);
         } elsif ($scfg->{iscsiprovider} eq 'iet') {
@@ -186,6 +192,28 @@
             description => "iscsi provider",
             type => 'string',
         },
+        # This is for TrueNAS iscsi and API intergration
+        # And some enhancements asked by the community
+        truenas_user => {
+            description => "TrueNAS API Username",
+            type => 'string',
+        },
+        truenas_password => {
+            description => "TrueNAS API Password",
+            type => 'string',
+        },
+        truenas_use_ssl => {
+            description => "TrueNAS API access via SSL",
+            type => 'boolean',
+        },
+        truenas_apiv4_host => {
+            description => "TrueNAS API Host",
+            type => 'string',
+        },
+        truenas_apikey => {
+            description => "TrueNAS API Key",
+            type => 'string',
+        },
         # this will disable write caching on comstar and istgt.
         # it is not implemented for iet. iet blockio always operates with
         # writethrough caching when not in readonly mode
@@ -219,14 +247,19 @@
         nodes => { optional => 1 },
         disable => { optional => 1 },
         portal => { fixed => 1 },
-        target => { fixed => 1 },
-        pool => { fixed => 1 },
+        target => { fixed => 0 },
+        pool => { fixed => 0 },
         blocksize => { fixed => 1 },
         iscsiprovider => { fixed => 1 },
         nowritecache => { optional => 1 },
         sparse => { optional => 1 },
         comstar_hg => { optional => 1 },
         comstar_tg => { optional => 1 },
+        truenas_user => { optional => 1 },
+        truenas_password => { optional => 1 },
+        truenas_use_ssl => { optional => 1 },
+        truenas_apiv4_host => { optional => 1 },
+        truenas_apikey => { optional => 1 },
         lio_tpg => { optional => 1 },
         content => { optional => 1 },
         bwlimit => { optional => 1 },
@@ -267,6 +300,8 @@
 		log_warn($message);
 		$base_path = '/dev/zvol';
 	    }
+        } elsif ($scfg->{iscsiprovider} eq 'truenas') {
+            $base_path = "/dev/zvol";
         } else {
             $zfs_unknown_scsi_provider->($scfg->{iscsiprovider});
         }
